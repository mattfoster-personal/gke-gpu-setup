{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 38,
  "lineage": "23cb5b5d-2e7b-cf5e-2e71-72af8984e0b3",
  "outputs": {},
  "resources": [
    {
      "module": "module.gke_cluster",
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "gke_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "config_connector_config": [],
                "dns_cache_config": [],
                "gce_persistent_disk_csi_driver_config": [
                  {
                    "enabled": true
                  }
                ],
                "gcp_filestore_csi_driver_config": [],
                "gcs_fuse_csi_driver_config": [],
                "gke_backup_agent_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ],
                "ray_operator_config": [],
                "stateful_ha_config": []
              }
            ],
            "allow_net_admin": null,
            "authenticator_groups_config": [],
            "binary_authorization": [
              {
                "enabled": false,
                "evaluation_mode": "DISABLED"
              }
            ],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [],
                "auto_provisioning_locations": [],
                "autoscaling_profile": "BALANCED",
                "enabled": false,
                "resource_limits": []
              }
            ],
            "cluster_ipv4_cidr": "10.20.0.0/16",
            "confidential_nodes": [],
            "cost_management_config": [],
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "datapath_provider": "",
            "default_max_pods_per_node": 110,
            "default_snat_status": [
              {
                "disabled": false
              }
            ],
            "deletion_protection": false,
            "description": "",
            "dns_config": [],
            "enable_autopilot": false,
            "enable_cilium_clusterwide_network_policy": false,
            "enable_intranode_visibility": false,
            "enable_k8s_beta_apis": [],
            "enable_kubernetes_alpha": false,
            "enable_l4_ilb_subsetting": false,
            "enable_legacy_abac": false,
            "enable_multi_networking": false,
            "enable_shielded_nodes": true,
            "enable_tpu": false,
            "endpoint": "34.95.135.85",
            "fleet": [],
            "gateway_api_config": [],
            "id": "projects/ai-research-e44f/locations/southamerica-east1-c/clusters/demo-cluster3",
            "identity_service_config": [],
            "initial_node_count": 1,
            "ip_allocation_policy": [
              {
                "additional_pod_ranges_config": [],
                "cluster_ipv4_cidr_block": "10.20.0.0/16",
                "cluster_secondary_range_name": "pods-range",
                "pod_cidr_overprovision_config": [
                  {
                    "disabled": false
                  }
                ],
                "services_ipv4_cidr_block": "10.30.0.0/16",
                "services_secondary_range_name": "services-range",
                "stack_type": "IPV4"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "southamerica-east1-c",
            "logging_config": [
              {
                "enable_components": [
                  "SYSTEM_COMPONENTS",
                  "WORKLOADS"
                ]
              }
            ],
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRZE5RbUhKbnlUSm1qUXlVZGs0YkhJekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlReU1HRmpNRFJqTlMwME5EUTVMVFJqTXpndFlqVTJOeTB6WVRKa05qSTNNalJrT1dZdwpJQmNOTWpVd016QXpNakV5T1RVMVdoZ1BNakExTlRBeU1qUXlNakk1TlRWYU1DOHhMVEFyQmdOVkJBTVRKREl3CllXTXdOR00xTFRRME5Ea3ROR016T0MxaU5UWTNMVE5oTW1RMk1qY3lOR1E1WmpDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQUpQZHhnVWhMSEYrN3VsQ2tLMEhKSEJ4NWNBeFJIdDdGblJHbktBbQo4ZFU0ZG9mR01jSFQ4N2tPVTdrMzI4UkFIUEpJN1BPODVMWGtXZmxCSDk1SStldlQyWi9IUU4wV3BQcFk0V1RzClNIU3d4T3NNRU4rMXl0cHVqQVVNNnh4aGV2VzBlSjZPWk5FV0RlSUlKTVpvd29SQ1N2M3ZSVlYzeENRc3JBRTMKVGNVOXl1elZJME4rTFFZRlNwRHNXYjdZYnhOenBBNDN4bmw0dUdUYmxyUEx6MkZkVm91dVJPMXB5VndJcDIzNwpBZmpVeWdXU3grRGtqY2h2dnJ3enRILy9ZNEdtcjU1TG50WVdhSTNxNWFuMFNIYmxPUDdob2h1cFVBRHQ4MXBJCjMvR3hVdmVET1Q2c05pQ0ZjdTdHbXdaMElYdnl6T3FOSkRFQWVPckNtQW9XVmx6c0t2RmdDN3QwbDE0bit6S0kKM3QyZlQyTFFhVTQrUG82dC9qVFlRNFZvYjg2WjJaU1VMM3Qzaml6akRpWTBtV3VQV1AvNWoxa0c0VEhxQ3RHbApMbTVpNWdhSDl6b1pHU2dNZnhrRjA4azhMTi9zYUc4REs2MFN0Qm9KZ3dsM2VyOFE5RlJYUXVmSnFsSFFlOU5QCjQ3YUloUXRHbHEwOGZIZzZJV09wdEVFTzZRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVFYWtOaXByckMrWUNoYjFDNnp3NjdLTmRlYWt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFDWEJXODRLaWc3T1g3Y0U2UTJhdW0zSDBHeEdHQmEvV0JWYmZBN2Q3SUhLCmpTY1ZXNkYzb0JKOEVXdzhjeFcwdzZzZm5HalRBSXcyU1M3RHIzTDJDMExmellSV0txVk5hNTlKc2RUSlB1NDgKRHQzUFhKNG5HeDg3RkZaZzhkVmNjaWp5N3dDTnBtWlBhMHc3Z3lvZlNaSkVKeFIzVStLR2c2UHcvVWZFejM3Ugphb2ZUQ1ZMbUdTTkVIK3Z4NWdnd3JJNVVSdHNyVWNQQWprZ3dVaDh4b2wvNFVGSSsxekdabFZoZSt1Q2hNWDdNClVwbE9rRVpsblJJcmhySGFQVDE1dXVVaUczRnYvaHdldTIyMmNQNWlCNGFXM09jcmRYS3BrSDh4cEdWMW5tcTgKK3k4WjV2LzFDTnNkc0MzUHFtYTV5VkcrRDZRbXhZZi95SGtlUkx6cVh1V2hMajl5dEplcCtqRDdKaGFLRWJrNgpONnNhK25qYlR3alhFTDZGZ2V1a2xOSWhwRjZKSlhFMnFDZ1VVeDlrVC9UUHRuTUVUVXZ2SXNRT2FmY0pscURJCkdsQnMrdHY1ZlVwNUpNa0NOeFl4bDBmb0VmYXp4Ujh0SWIwbFJOM0ozVjZZL25aaUVGdmdMZHFIOVRWZ25oSFgKOTMrSkNESzIrTDZCWjFCckdYRTBWZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "master_authorized_networks_config": [],
            "master_version": "1.31.5-gke.1169000",
            "mesh_certificates": [],
            "min_master_version": null,
            "monitoring_config": [
              {
                "advanced_datapath_observability_config": [
                  {
                    "enable_metrics": false,
                    "enable_relay": false,
                    "relay_mode": "DISABLED"
                  }
                ],
                "enable_components": [
                  "SYSTEM_COMPONENTS",
                  "STORAGE",
                  "HPA",
                  "POD",
                  "DAEMONSET",
                  "DEPLOYMENT",
                  "STATEFULSET",
                  "CADVISOR",
                  "KUBELET"
                ],
                "managed_prometheus": [
                  {
                    "enabled": true
                  }
                ]
              }
            ],
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "demo-cluster3",
            "network": "projects/ai-research-e44f/global/networks/gke-network",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "networking_mode": "VPC_NATIVE",
            "node_config": [
              {
                "advanced_machine_features": [],
                "boot_disk_kms_key": "",
                "confidential_nodes": [],
                "containerd_config": [],
                "disk_size_gb": 1000,
                "disk_type": "pd-standard",
                "effective_taints": [],
                "enable_confidential_storage": false,
                "ephemeral_storage_local_ssd_config": [],
                "fast_socket": [],
                "gcfs_config": [],
                "guest_accelerator": [],
                "gvnic": [],
                "host_maintenance_policy": [],
                "image_type": "UBUNTU_CONTAINERD",
                "kubelet_config": [
                  {
                    "cpu_cfs_quota": false,
                    "cpu_cfs_quota_period": "",
                    "cpu_manager_policy": "",
                    "insecure_kubelet_readonly_port_enabled": "TRUE",
                    "pod_pids_limit": 0
                  }
                ],
                "labels": {
                  "gke-no-default-nvidia-gpu-device-plugin": "true"
                },
                "linux_node_config": [],
                "local_nvme_ssd_block_config": [],
                "local_ssd_count": 0,
                "logging_variant": "DEFAULT",
                "machine_type": "n1-standard-4",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "node_group": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/devstorage.read_only",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring",
                  "https://www.googleapis.com/auth/service.management.readonly",
                  "https://www.googleapis.com/auth/servicecontrol",
                  "https://www.googleapis.com/auth/trace.append"
                ],
                "preemptible": false,
                "reservation_affinity": [],
                "resource_labels": {
                  "goog-gke-node-pool-provisioning-model": "on-demand"
                },
                "resource_manager_tags": {},
                "secondary_boot_disks": [],
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": false
                  }
                ],
                "sole_tenant_config": [],
                "spot": false,
                "tags": [
                  "nvidia-ingress-all"
                ],
                "taint": [],
                "workload_metadata_config": [
                  {
                    "mode": "GKE_METADATA"
                  }
                ]
              }
            ],
            "node_locations": [],
            "node_pool": [
              {
                "autoscaling": [],
                "initial_node_count": 1,
                "instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/zones/southamerica-east1-c/instanceGroupManagers/gke-demo-cluster3-default-pool-ec1fff36-grp"
                ],
                "managed_instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/zones/southamerica-east1-c/instanceGroups/gke-demo-cluster3-default-pool-ec1fff36-grp"
                ],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 110,
                "name": "default-pool",
                "name_prefix": "",
                "network_config": [
                  {
                    "additional_node_network_configs": [],
                    "additional_pod_network_configs": [],
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "network_performance_config": [],
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.20.0.0/16",
                    "pod_range": "pods-range"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "containerd_config": [],
                    "disk_size_gb": 1000,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "enable_confidential_storage": false,
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "UBUNTU_CONTAINERD",
                    "kubelet_config": [
                      {
                        "cpu_cfs_quota": false,
                        "cpu_cfs_quota_period": "",
                        "cpu_manager_policy": "",
                        "insecure_kubelet_readonly_port_enabled": "TRUE",
                        "pod_pids_limit": 0
                      }
                    ],
                    "labels": {
                      "gke-no-default-nvidia-gpu-device-plugin": "true"
                    },
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "n1-standard-4",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [],
                    "resource_labels": {
                      "goog-gke-node-pool-provisioning-model": "on-demand"
                    },
                    "resource_manager_tags": {},
                    "secondary_boot_disks": [],
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": false
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [
                      "nvidia-ingress-all"
                    ],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 1,
                "node_locations": [
                  "southamerica-east1-c"
                ],
                "placement_policy": [],
                "queued_provisioning": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.31.5-gke.1169000"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 5,
                    "min_node_count": 2,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 2,
                "instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/zones/southamerica-east1-c/instanceGroupManagers/gke-demo-cluster3-gpu-node-pool-test1-b1edaf97-grp"
                ],
                "managed_instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/zones/southamerica-east1-c/instanceGroups/gke-demo-cluster3-gpu-node-pool-test1-b1edaf97-grp"
                ],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 110,
                "name": "gpu-node-pool-test1",
                "name_prefix": "",
                "network_config": [
                  {
                    "additional_node_network_configs": [],
                    "additional_pod_network_configs": [],
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "network_performance_config": [],
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.20.0.0/16",
                    "pod_range": "pods-range"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "containerd_config": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-ssd",
                    "effective_taints": [
                      {
                        "effect": "NO_SCHEDULE",
                        "key": "nvidia.com/gpu",
                        "value": "present"
                      }
                    ],
                    "enable_confidential_storage": false,
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [
                      {
                        "count": 2,
                        "gpu_driver_installation_config": [
                          {
                            "gpu_driver_version": "DEFAULT"
                          }
                        ],
                        "gpu_partition_size": "",
                        "gpu_sharing_config": [],
                        "type": "nvidia-tesla-t4"
                      }
                    ],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "UBUNTU_CONTAINERD",
                    "kubelet_config": [
                      {
                        "cpu_cfs_quota": false,
                        "cpu_cfs_quota_period": "",
                        "cpu_manager_policy": "",
                        "insecure_kubelet_readonly_port_enabled": "TRUE",
                        "pod_pids_limit": 0
                      }
                    ],
                    "labels": {
                      "gke-no-default-nvidia-gpu-device-plugin": "true"
                    },
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "n1-standard-4",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [],
                    "resource_labels": {
                      "goog-gke-accelerator-type": "nvidia-tesla-t4",
                      "goog-gke-node-pool-provisioning-model": "on-demand"
                    },
                    "resource_manager_tags": {},
                    "secondary_boot_disks": [],
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": false
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [
                      "gpu-node"
                    ],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 2,
                "node_locations": [
                  "southamerica-east1-c"
                ],
                "placement_policy": [],
                "queued_provisioning": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.31.5-gke.1169000"
              }
            ],
            "node_pool_auto_config": [],
            "node_pool_defaults": [
              {
                "node_config_defaults": [
                  {
                    "containerd_config": [],
                    "insecure_kubelet_readonly_port_enabled": "FALSE",
                    "logging_variant": "DEFAULT"
                  }
                ]
              }
            ],
            "node_version": "1.31.5-gke.1169000",
            "notification_config": [
              {
                "pubsub": [
                  {
                    "enabled": false,
                    "filter": [],
                    "topic": ""
                  }
                ]
              }
            ],
            "operation": null,
            "private_cluster_config": [
              {
                "enable_private_endpoint": false,
                "enable_private_nodes": false,
                "master_global_access_config": [
                  {
                    "enabled": false
                  }
                ],
                "master_ipv4_cidr_block": "",
                "peering_name": "",
                "private_endpoint": "10.10.0.2",
                "private_endpoint_subnetwork": "",
                "public_endpoint": "34.95.135.85"
              }
            ],
            "private_ipv6_google_access": "",
            "project": "ai-research-e44f",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": false,
            "resource_labels": {},
            "resource_usage_export_config": [],
            "security_posture_config": [
              {
                "mode": "BASIC",
                "vulnerability_mode": "VULNERABILITY_MODE_UNSPECIFIED"
              }
            ],
            "self_link": "https://container.googleapis.com/v1/projects/ai-research-e44f/zones/southamerica-east1-c/clusters/demo-cluster3",
            "service_external_ips_config": [
              {
                "enabled": false
              }
            ],
            "services_ipv4_cidr": "10.30.0.0/16",
            "subnetwork": "projects/ai-research-e44f/regions/southamerica-east1/subnetworks/gke-subnet",
            "timeouts": null,
            "tpu_ipv4_cidr_block": "",
            "vertical_pod_autoscaling": [],
            "workload_identity_config": [
              {
                "workload_pool": "ai-research-e44f.svc.id.goog"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "module.gke_network.google_compute_network.gke_network",
            "module.gke_network.google_compute_subnetwork.gke_subnet"
          ]
        }
      ]
    },
    {
      "module": "module.gke_network",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "gke_network",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "enable_ula_internal_ipv6": false,
            "gateway_ipv4": "",
            "id": "projects/ai-research-e44f/global/networks/gke-network",
            "internal_ipv6_range": "",
            "mtu": 0,
            "name": "gke-network",
            "network_firewall_policy_enforcement_order": "AFTER_CLASSIC_FIREWALL",
            "numeric_id": "3811987278804005128",
            "project": "ai-research-e44f",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/global/networks/gke-network",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMCJ9"
        }
      ]
    },
    {
      "module": "module.gke_network",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "gke_subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2025-03-03T14:28:38.602-08:00",
            "description": "",
            "external_ipv6_prefix": "",
            "fingerprint": null,
            "gateway_address": "10.10.0.1",
            "id": "projects/ai-research-e44f/regions/southamerica-east1/subnetworks/gke-subnet",
            "internal_ipv6_prefix": "",
            "ip_cidr_range": "10.10.0.0/16",
            "ipv6_access_type": "",
            "ipv6_cidr_range": "",
            "log_config": [],
            "name": "gke-subnet",
            "network": "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/global/networks/gke-network",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "ai-research-e44f",
            "purpose": "PRIVATE",
            "region": "southamerica-east1",
            "role": "",
            "secondary_ip_range": [
              {
                "ip_cidr_range": "10.20.0.0/16",
                "range_name": "pods-range"
              },
              {
                "ip_cidr_range": "10.30.0.0/16",
                "range_name": "services-range"
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/ai-research-e44f/regions/southamerica-east1/subnetworks/gke-subnet",
            "send_secondary_ip_range_if_empty": null,
            "stack_type": "IPV4_ONLY",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMCJ9",
          "dependencies": [
            "module.gke_network.google_compute_network.gke_network"
          ]
        }
      ]
    },
    {
      "module": "module.observability",
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus_operator",
      "provider": "module.observability.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.71.2",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1741130776,
                "last_deployed": 1741130776,
                "name": "prometheus",
                "namespace": "observability",
                "notes": "kube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.observability.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace observability prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.observability.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace observability -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace observability port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace observability get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace observability -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace observability $POD_NAME 9100",
                "revision": 1,
                "values": "{\"alertmanager\":{\"enabled\":true},\"grafana\":{\"enabled\":true},\"nodeExporter\":{\"hostPort\":9101,\"service\":{\"port\":9101,\"targetPort\":9101}},\"prometheus\":{\"prometheusSpec\":{\"priorityClassName\":\"\"},\"service\":{\"type\":\"ClusterIP\"}},\"prometheusOperator\":{\"createCustomResource\":true}}",
                "version": "56.6.0"
              }
            ],
            "name": "prometheus",
            "namespace": "observability",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "prometheusOperator.createCustomResource",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "    nodeExporter:\n      hostPort: 9101\n      service:\n        port: 9101\n        targetPort: 9101\n\n    prometheus:\n      service:\n        type: ClusterIP\n      prometheusSpec:\n        priorityClassName: \"\"\n\n    alertmanager:\n      enabled: true\n\n    grafana:\n      enabled: true\n"
            ],
            "verify": false,
            "version": "56.6.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.gke_cluster.google_container_cluster.gke_cluster",
            "module.gke_network.google_compute_network.gke_network",
            "module.gke_network.google_compute_subnetwork.gke_subnet"
          ]
        }
      ]
    },
    {
      "module": "module.observability",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "dcgm_servicemonitor",
      "provider": "module.observability.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "monitoring.coreos.com/v1",
                "kind": "ServiceMonitor",
                "metadata": {
                  "labels": {
                    "release": "prometheus"
                  },
                  "name": "dcgm-exporter",
                  "namespace": "observability"
                },
                "spec": {
                  "endpoints": [
                    {
                      "interval": "30s",
                      "port": "gpu-metrics"
                    }
                  ],
                  "namespaceSelector": {
                    "matchNames": [
                      "gpu-operator"
                    ]
                  },
                  "selector": {
                    "matchLabels": {
                      "app": "nvidia-dcgm-exporter"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "labels": [
                        "object",
                        {
                          "release": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "endpoints": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "interval": "string",
                              "port": "string"
                            }
                          ]
                        ]
                      ],
                      "namespaceSelector": [
                        "object",
                        {
                          "matchNames": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "monitoring.coreos.com/v1",
                "kind": "ServiceMonitor",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "release": "prometheus"
                  },
                  "managedFields": null,
                  "name": "dcgm-exporter",
                  "namespace": "observability",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "attachMetadata": {
                    "node": null
                  },
                  "endpoints": [
                    {
                      "authorization": {
                        "credentials": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "type": null
                      },
                      "basicAuth": {
                        "password": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "username": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      },
                      "bearerTokenFile": null,
                      "bearerTokenSecret": {
                        "key": null,
                        "name": null,
                        "optional": null
                      },
                      "enableHttp2": null,
                      "filterRunning": null,
                      "followRedirects": null,
                      "honorLabels": null,
                      "honorTimestamps": null,
                      "interval": "30s",
                      "metricRelabelings": null,
                      "oauth2": {
                        "clientId": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "clientSecret": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "endpointParams": null,
                        "scopes": null,
                        "tokenUrl": null
                      },
                      "params": null,
                      "path": null,
                      "port": "gpu-metrics",
                      "proxyUrl": null,
                      "relabelings": null,
                      "scheme": null,
                      "scrapeTimeout": null,
                      "targetPort": null,
                      "tlsConfig": {
                        "ca": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "caFile": null,
                        "cert": {
                          "configMap": {
                            "key": null,
                            "name": null,
                            "optional": null
                          },
                          "secret": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        },
                        "certFile": null,
                        "insecureSkipVerify": null,
                        "keyFile": null,
                        "keySecret": {
                          "key": null,
                          "name": null,
                          "optional": null
                        },
                        "serverName": null
                      },
                      "trackTimestampsStaleness": null
                    }
                  ],
                  "jobLabel": null,
                  "keepDroppedTargets": null,
                  "labelLimit": null,
                  "labelNameLengthLimit": null,
                  "labelValueLengthLimit": null,
                  "namespaceSelector": {
                    "any": null,
                    "matchNames": [
                      "gpu-operator"
                    ]
                  },
                  "podTargetLabels": null,
                  "sampleLimit": null,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app": "nvidia-dcgm-exporter"
                    }
                  },
                  "targetLabels": null,
                  "targetLimit": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "attachMetadata": [
                        "object",
                        {
                          "node": "bool"
                        }
                      ],
                      "endpoints": [
                        "list",
                        [
                          "object",
                          {
                            "authorization": [
                              "object",
                              {
                                "credentials": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "type": "string"
                              }
                            ],
                            "basicAuth": [
                              "object",
                              {
                                "password": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "username": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ]
                              }
                            ],
                            "bearerTokenFile": "string",
                            "bearerTokenSecret": [
                              "object",
                              {
                                "key": "string",
                                "name": "string",
                                "optional": "bool"
                              }
                            ],
                            "enableHttp2": "bool",
                            "filterRunning": "bool",
                            "followRedirects": "bool",
                            "honorLabels": "bool",
                            "honorTimestamps": "bool",
                            "interval": "string",
                            "metricRelabelings": [
                              "list",
                              [
                                "object",
                                {
                                  "action": "string",
                                  "modulus": "number",
                                  "regex": "string",
                                  "replacement": "string",
                                  "separator": "string",
                                  "sourceLabels": [
                                    "list",
                                    "string"
                                  ],
                                  "targetLabel": "string"
                                }
                              ]
                            ],
                            "oauth2": [
                              "object",
                              {
                                "clientId": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "clientSecret": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "endpointParams": [
                                  "map",
                                  "string"
                                ],
                                "scopes": [
                                  "list",
                                  "string"
                                ],
                                "tokenUrl": "string"
                              }
                            ],
                            "params": [
                              "map",
                              [
                                "list",
                                "string"
                              ]
                            ],
                            "path": "string",
                            "port": "string",
                            "proxyUrl": "string",
                            "relabelings": [
                              "list",
                              [
                                "object",
                                {
                                  "action": "string",
                                  "modulus": "number",
                                  "regex": "string",
                                  "replacement": "string",
                                  "separator": "string",
                                  "sourceLabels": [
                                    "list",
                                    "string"
                                  ],
                                  "targetLabel": "string"
                                }
                              ]
                            ],
                            "scheme": "string",
                            "scrapeTimeout": "string",
                            "targetPort": "string",
                            "tlsConfig": [
                              "object",
                              {
                                "ca": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "caFile": "string",
                                "cert": [
                                  "object",
                                  {
                                    "configMap": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ],
                                    "secret": [
                                      "object",
                                      {
                                        "key": "string",
                                        "name": "string",
                                        "optional": "bool"
                                      }
                                    ]
                                  }
                                ],
                                "certFile": "string",
                                "insecureSkipVerify": "bool",
                                "keyFile": "string",
                                "keySecret": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "serverName": "string"
                              }
                            ],
                            "trackTimestampsStaleness": "bool"
                          }
                        ]
                      ],
                      "jobLabel": "string",
                      "keepDroppedTargets": "number",
                      "labelLimit": "number",
                      "labelNameLengthLimit": "number",
                      "labelValueLengthLimit": "number",
                      "namespaceSelector": [
                        "object",
                        {
                          "any": "bool",
                          "matchNames": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "podTargetLabels": [
                        "list",
                        "string"
                      ],
                      "sampleLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "targetLabels": [
                        "list",
                        "string"
                      ],
                      "targetLimit": "number"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.gke_cluster.google_container_cluster.gke_cluster",
            "module.observability.helm_release.prometheus_operator"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
